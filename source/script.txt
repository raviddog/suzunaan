id:trigger:instructions

id is an unsigned integer, so it must be non-negative
the id is optional but some recurring triggers need it in order to stop their instructions
instructions aren't restricted to one per line, or one line per trigger,
    but your id and trigger must be on the same line, separated by colons.



enemy
==============

instruction: speed(float speed);
set speed


bullets
==============

triggers
----------------

# implemented

frame(int frame)
happens on specified frame
single run instruction

external()
trigger by id only
same as not having a normal trigger
single run instruction

externalCont()
trigger by id only
same as not having a normal trigger
runs until stopped

# not implemented

fromFrame(int frame)
run every frame starting at specified frame
cancellable by id

interval(int start, int frames)
starting from specified frame, run every x frames
cancellable by id

betweenFrame(int frameStart, int frameEnd)
run every frame starting at specified frame and ending at specified frame
the function is called on the start frame but not on the end frame

distanceToPlayer(float distance)
activates when bullet is less than a certain distance from the player
single run instruction

distanceFromPlayer(float distance)
activates when bullet is more than a certain distance from the player
single run instruction


instructions
----------------

# implemented

speed(float);
set speed

accel(float);
set acceleration

angle_change(float);
set an amount to change the angle per frame

type_set(int);
change the bullet type to the specified value

type_set_relative(int);
change the bullet type by a relative amount

angle(float);
set bullet angle

start(int id);
run instruction with id
this doesn't make any guarantees about whether the instruction is single run or not
it only adds it to back of the the active instruction queue, which means it does run on the same frame

stop(int id);
cancel instruction with specified id
don't make an instruction cancel itself, or things will break

# not implemented

speedTo(float speed, int frames);
speed goes to target over specified number of frames

move(float angle, float speed);
set movement direction and speed.